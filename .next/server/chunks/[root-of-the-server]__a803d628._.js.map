{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/models/User.ts"],"sourcesContent":["import mongoose from \"mongoose\";\n\nconst { Schema } = mongoose;\n\nconst userSchema = new Schema(\n  {\n    name: {\n      type: String,\n      unique: true,\n      required: true,\n    },\n    email: {\n      type: String,\n      unique: true,\n      required: true,\n    },\n    passwordHash: {\n      type: String,\n    },\n    role: {\n      type: String,\n      enum: [\"guest\", \"host\", \"admin\"],\n      default: \"guest\",\n    },\n    stripeAccountId: {\n      type: String,\n    },\n    avatarUrl: {\n      type: String,\n    },\n  },\n  {\n    timestamps: true,\n  }\n);\n\n// If the User collection does not exist, create a new one.\nexport default mongoose.models.User || mongoose.model(\"User\", userSchema);"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,EAAE,MAAM,EAAE,GAAG,yGAAA,CAAA,UAAQ;AAE3B,MAAM,aAAa,IAAI,OACrB;IACE,MAAM;QACJ,MAAM;QACN,QAAQ;QACR,UAAU;IACZ;IACA,OAAO;QACL,MAAM;QACN,QAAQ;QACR,UAAU;IACZ;IACA,cAAc;QACZ,MAAM;IACR;IACA,MAAM;QACJ,MAAM;QACN,MAAM;YAAC;YAAS;YAAQ;SAAQ;QAChC,SAAS;IACX;IACA,iBAAiB;QACf,MAAM;IACR;IACA,WAAW;QACT,MAAM;IACR;AACF,GACA;IACE,YAAY;AACd;uCAIa,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,QAAQ","debugId":null}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/utils/db.ts"],"sourcesContent":["import mongoose from \"mongoose\";\nimport { string } from \"zod\";\nlet MONGO: string = \"mongodb+srv://paudelsunil16:paudelsunil16@cluster0.dlua3bq.mongodb.net/\"\nmongoose.set('strictQuery', false);\nconst connect = async () => {\n  try {\n    await mongoose.connect(MONGO);\n  } catch (error) {\n    throw new Error(\"Connection failed!\");\n  }\n};\n\nexport default connect;"],"names":[],"mappings":";;;AAAA;;AAEA,IAAI,QAAgB;AACpB,yGAAA,CAAA,UAAQ,CAAC,GAAG,CAAC,eAAe;AAC5B,MAAM,UAAU;IACd,IAAI;QACF,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC;IACzB,EAAE,OAAO,OAAO;QACd,MAAM,IAAI,MAAM;IAClB;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/api/auth/signup/route.ts"],"sourcesContent":["\nimport User from \"@/models/User\";\nimport connect from \"@/utils/db\";\nimport bcrypt from \"bcryptjs\";\nimport { NextResponse, type NextRequest } from \"next/server\";\nimport nodemailer from \"nodemailer\";\n\nexport const POST = async (request: NextRequest) => {\n  try {\n    const { fullName, email, password } = await request.json();\n\n    if (!fullName || !email || !password) {\n      return NextResponse.json(\n        { message: \"Missing required fields: fullName, email, and password.\" },\n        { status: 400 }\n      );\n    }\n\n    await connect();\n\n    const existingUser = await User.findOne({ email });\n    if (existingUser) {\n      return NextResponse.json(\n        { message: \"User with this email already exists\" },\n        { status: 409 } \n      );\n    }\n\n    //const hashedPassword = await bcrypt.hash(password, 5);\n    //console.log(\"Generated hashedPassword:\", hashedPassword); // DEBUG LOG\n\n    const newUser = new User({\n      name: fullName,\n      email,\n      password, \n    });\n\n    console.log(\"New user object before save:\", JSON.stringify(newUser.toObject(), null, 2)); // DEBUG LOG\n\n    await newUser.save();\n    console.log(\"User saved successfully.\"); // DEBUG LOG\n\n    // Sending confirmation email\n    try {\n      const transporter = nodemailer.createTransport({\n        service: \"gmail\",\n        auth: {\n          user: process.env.GOOGLE_EMAIL,\n          pass: process.env.GOOGLE_PASSWORD,\n        },\n      });\n\n      const mailOptions = {\n        from: process.env.GOOGLE_EMAIL,\n        to: email,\n        subject: \"Registration Confirmation - Lodger\",\n        text: `Thank you for registering on Lodger, ${fullName}! Your registration is successful. If you did not apply for registration, please contact us.`,\n      };\n\n      await transporter.sendMail(mailOptions);\n      console.log(\"Confirmation email sent to:\", email);\n    } catch (emailError: any) {\n      console.error(\"Failed to send confirmation email:\", emailError.message || emailError);\n    }\n\n    return NextResponse.json(\n      { message: \"User created successfully. Confirmation email sent.\" },\n      { status: 201 }\n    );\n\n  } catch (err: any) {\n    console.error(\"Signup API Error:\", err); \n    \n    let errorMessage = \"An unexpected error occurred during signup.\";\n    let errorDetails = \"\";\n\n    if (err.message) {\n        errorMessage = err.message;\n    }\n    \n    if (err.stack) {\n        errorDetails = err.stack;\n    } else if (typeof err === 'object' && err !== null) {\n        errorDetails = JSON.stringify(err);\n    }\n    \n    if (errorMessage === \"Connection failed!\") {\n         return NextResponse.json(\n            { message: \"Server error during signup.\", error: \"Connection failed!\", details: err.stack || \"No stack available.\" },\n            { status: 500 }\n        );\n    }\n\n    return NextResponse.json(\n        { message: \"Server error during signup.\", error: errorMessage, details: errorDetails },\n        { status: 500 }\n    );\n  }\n};\n"],"names":[],"mappings":";;;AACA;AACA;AAEA;AACA;;;;;AAEO,MAAM,OAAO,OAAO;IACzB,IAAI;QACF,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,MAAM,QAAQ,IAAI;QAExD,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,UAAU;YACpC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;YAA0D,GACrE;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,CAAA,GAAA,oHAAA,CAAA,UAAO,AAAD;QAEZ,MAAM,eAAe,MAAM,uHAAA,CAAA,UAAI,CAAC,OAAO,CAAC;YAAE;QAAM;QAChD,IAAI,cAAc;YAChB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;YAAsC,GACjD;gBAAE,QAAQ;YAAI;QAElB;QAEA,wDAAwD;QACxD,wEAAwE;QAExE,MAAM,UAAU,IAAI,uHAAA,CAAA,UAAI,CAAC;YACvB,MAAM;YACN;YACA;QACF;QAEA,QAAQ,GAAG,CAAC,gCAAgC,KAAK,SAAS,CAAC,QAAQ,QAAQ,IAAI,MAAM,KAAK,YAAY;QAEtG,MAAM,QAAQ,IAAI;QAClB,QAAQ,GAAG,CAAC,6BAA6B,YAAY;QAErD,6BAA6B;QAC7B,IAAI;YACF,MAAM,cAAc,iJAAA,CAAA,UAAU,CAAC,eAAe,CAAC;gBAC7C,SAAS;gBACT,MAAM;oBACJ,MAAM,QAAQ,GAAG,CAAC,YAAY;oBAC9B,MAAM,QAAQ,GAAG,CAAC,eAAe;gBACnC;YACF;YAEA,MAAM,cAAc;gBAClB,MAAM,QAAQ,GAAG,CAAC,YAAY;gBAC9B,IAAI;gBACJ,SAAS;gBACT,MAAM,CAAC,qCAAqC,EAAE,SAAS,4FAA4F,CAAC;YACtJ;YAEA,MAAM,YAAY,QAAQ,CAAC;YAC3B,QAAQ,GAAG,CAAC,+BAA+B;QAC7C,EAAE,OAAO,YAAiB;YACxB,QAAQ,KAAK,CAAC,sCAAsC,WAAW,OAAO,IAAI;QAC5E;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;QAAsD,GACjE;YAAE,QAAQ;QAAI;IAGlB,EAAE,OAAO,KAAU;QACjB,QAAQ,KAAK,CAAC,qBAAqB;QAEnC,IAAI,eAAe;QACnB,IAAI,eAAe;QAEnB,IAAI,IAAI,OAAO,EAAE;YACb,eAAe,IAAI,OAAO;QAC9B;QAEA,IAAI,IAAI,KAAK,EAAE;YACX,eAAe,IAAI,KAAK;QAC5B,OAAO,IAAI,OAAO,QAAQ,YAAY,QAAQ,MAAM;YAChD,eAAe,KAAK,SAAS,CAAC;QAClC;QAEA,IAAI,iBAAiB,sBAAsB;YACtC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACrB;gBAAE,SAAS;gBAA+B,OAAO;gBAAsB,SAAS,IAAI,KAAK,IAAI;YAAsB,GACnH;gBAAE,QAAQ;YAAI;QAEtB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACpB;YAAE,SAAS;YAA+B,OAAO;YAAc,SAAS;QAAa,GACrF;YAAE,QAAQ;QAAI;IAEpB;AACF","debugId":null}}]
}