{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/utils/db.ts"],"sourcesContent":["import mongoose from \"mongoose\";\nmongoose.set('strictQuery', false);\n\n// Ensure this MONGODB_URL is correct and your IP is whitelisted if using Atlas.\nconst MONGODB_URL= \"mongodb+srv://paudelsunil16:paudelsunil16@cluster0.dlua3bq.mongodb.net/\";\n\nconst connectDB = async () => {\n  if (mongoose.connection.readyState >= 1) {\n    console.log(\"MongoDB is already connected.\");\n    return;\n  }\n  try {\n    if (!MONGODB_URL) {\n      console.error(\"[DB Connect] MongoDB URI is not defined. Please set it in your environment variables or configuration.\");\n      throw new Error(\"Server configuration error: MONGODB_URI is not defined.\");\n    }\n    console.log(\"[DB Connect] Attempting to connect to MongoDB...\");\n    await mongoose.connect(MONGODB_URL);\n    console.log(\"[DB Connect] MongoDB connected successfully.\");\n  } catch (error: any) {\n    console.error(\"[DB Connect] MongoDB connection failed:\", error.message);\n    if (error.stack) {\n      console.error(\"[DB Connect] MongoDB connection error stack:\", error.stack);\n    } else {\n      console.error(\"[DB Connect] MongoDB connection error details:\", error);\n    }\n    // Construct a new error to ensure it's an Error instance with a clear message\n    throw new Error(\"Database connection failed: \" + error.message);\n  }\n};\n\nexport default connectDB;"],"names":[],"mappings":";;;AAAA;;AACA,yGAAA,CAAA,UAAQ,CAAC,GAAG,CAAC,eAAe;AAE5B,gFAAgF;AAChF,MAAM,cAAa;AAEnB,MAAM,YAAY;IAChB,IAAI,yGAAA,CAAA,UAAQ,CAAC,UAAU,CAAC,UAAU,IAAI,GAAG;QACvC,QAAQ,GAAG,CAAC;QACZ;IACF;IACA,IAAI;QACF,uCAAkB;;QAGlB;QACA,QAAQ,GAAG,CAAC;QACZ,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC;QACvB,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,2CAA2C,MAAM,OAAO;QACtE,IAAI,MAAM,KAAK,EAAE;YACf,QAAQ,KAAK,CAAC,gDAAgD,MAAM,KAAK;QAC3E,OAAO;YACL,QAAQ,KAAK,CAAC,kDAAkD;QAClE;QACA,8EAA8E;QAC9E,MAAM,IAAI,MAAM,iCAAiC,MAAM,OAAO;IAChE;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/models/User.ts"],"sourcesContent":["\nimport mongoose, { Schema, Document } from \"mongoose\";\n\nexport interface IUser extends Document {\n  _id: mongoose.Types.ObjectId; // Explicitly define _id\n  name: string;\n  email: string;\n  passwordHash?: string;\n  role: \"guest\" | \"host\" | \"admin\";\n  stripeAccountId?: string;\n  avatarUrl?: string;\n  createdAt: Date;\n  updatedAt: Date; // Mongoose adds this with timestamps\n}\n\nconst userSchema = new Schema<IUser>(\n  {\n    name: { type: String, required: true },\n    email: { type: String, required: true, unique: true },\n    passwordHash: { type: String },\n    role: { type: String, enum: [\"guest\", \"host\", \"admin\"], default: \"guest\" },\n    stripeAccountId: { type: String },\n    avatarUrl: { type: String },\n  },\n  { \n    timestamps: true,\n    toJSON: {\n      virtuals: true, // ensure virtuals are included\n      transform: function (doc, ret) {\n        ret.id = ret._id.toString(); // map _id to id\n        delete ret._id;\n        delete ret.passwordHash; // remove passwordHash\n        delete ret.__v; // remove __v\n      }\n    },\n    toObject: { // Also apply transform for toObject if needed elsewhere\n      virtuals: true,\n      transform: function (doc, ret) {\n        ret.id = ret._id.toString();\n        delete ret._id;\n        delete ret.passwordHash;\n        delete ret.__v;\n      }\n    }\n  }\n);\n\nexport default mongoose.models.User || mongoose.model<IUser>(\"User\", userSchema);\n"],"names":[],"mappings":";;;AACA;;AAcA,MAAM,aAAa,IAAI,yGAAA,CAAA,SAAM,CAC3B;IACE,MAAM;QAAE,MAAM;QAAQ,UAAU;IAAK;IACrC,OAAO;QAAE,MAAM;QAAQ,UAAU;QAAM,QAAQ;IAAK;IACpD,cAAc;QAAE,MAAM;IAAO;IAC7B,MAAM;QAAE,MAAM;QAAQ,MAAM;YAAC;YAAS;YAAQ;SAAQ;QAAE,SAAS;IAAQ;IACzE,iBAAiB;QAAE,MAAM;IAAO;IAChC,WAAW;QAAE,MAAM;IAAO;AAC5B,GACA;IACE,YAAY;IACZ,QAAQ;QACN,UAAU;QACV,WAAW,SAAU,GAAG,EAAE,GAAG;YAC3B,IAAI,EAAE,GAAG,IAAI,GAAG,CAAC,QAAQ,IAAI,gBAAgB;YAC7C,OAAO,IAAI,GAAG;YACd,OAAO,IAAI,YAAY,EAAE,sBAAsB;YAC/C,OAAO,IAAI,GAAG,EAAE,aAAa;QAC/B;IACF;IACA,UAAU;QACR,UAAU;QACV,WAAW,SAAU,GAAG,EAAE,GAAG;YAC3B,IAAI,EAAE,GAAG,IAAI,GAAG,CAAC,QAAQ;YACzB,OAAO,IAAI,GAAG;YACd,OAAO,IAAI,YAAY;YACvB,OAAO,IAAI,GAAG;QAChB;IACF;AACF;uCAGa,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAQ,QAAQ","debugId":null}},
    {"offset": {"line": 247, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/api/auth/%5B...nextauth%5D/route.ts"],"sourcesContent":["\nimport NextAuth, { type NextAuthOptions } from \"next-auth\";\nimport CredentialsProvider from \"next-auth/providers/credentials\";\nimport bcrypt from \"bcryptjs\";\n\nimport connectDB from \"@/utils/db\";         // MongoDB connection utility\nimport User from \"@/models/User\";           // Mongoose User model\n\n// Check for NEXTAUTH_SECRET at module load time\nif (!process.env.NEXTAUTH_SECRET) {\n  console.warn(\n    \"\\x1b[33m%s\\x1b[0m\", // Yellow text\n    \"[NextAuth Warning] NEXTAUTH_SECRET environment variable is not set! \" +\n    \"Authentication will not work reliably. Please ensure it is set in your environment.\"\n  );\n}\n\nexport const authOptions: NextAuthOptions = {\n  // === Authentication Providers ===\n  providers: [\n    CredentialsProvider({\n      id: \"credentials\",\n      name: \"Credentials\",\n\n      // Fields for sign-in formx\n      credentials: {\n        email: { label: \"Email\", type: \"text\", placeholder: \"jsmith@example.com\" },\n        password: { label: \"Password\", type: \"password\" },\n      },\n\n      // Core login logic\n      async authorize(credentials) {\n        console.log(\"[Authorize] Credentials received:\", credentials ? { email: credentials.email, password_exists: !!credentials.password } : \"null_credentials\");\n\n        // Validate input\n        if (!credentials?.email || !credentials?.password) {\n          console.log(\"[Authorize] Missing email or password.\");\n          throw new Error(\"Please enter both email and password.\");\n        }\n\n        try {\n          console.log(\"[Authorize] Connecting to DB...\");\n          await connectDB();\n          console.log(\"[Authorize] DB connection successful.\");\n\n          const user = await User.findOne({ email: credentials.email });\n\n          if (!user) {\n            console.log(\"[Authorize] No user found with email:\", credentials.email);\n            throw new Error(\"No user found with this email.\");\n          }\n\n          if (!user.passwordHash) {\n            console.log(\"[Authorize] User has no password set:\", credentials.email);\n            throw new Error(\"User account is not properly configured for password login.\");\n          }\n\n          const isValidPassword = await bcrypt.compare(credentials.password, user.passwordHash);\n          if (!isValidPassword) {\n            console.log(\"[Authorize] Incorrect password for:\", credentials.email);\n            throw new Error(\"Invalid password.\");\n          }\n\n          // Success: Return user data matching the `User` interface in next-auth.d.ts\n          console.log(\"[Authorize] Login success for user:\", user._id.toString(), user.email);\n          return {\n            id: user._id.toString(), // Mongoose _id to string\n            name: user.name,\n            email: user.email,\n            image: user.avatarUrl, // This will map to DefaultAuthUser's `image`\n            role: user.role,\n          };\n        } catch (error: any) {\n          console.error(\"[Authorize] Unexpected error:\", error.message, error.stack);\n\n          // Re-throw specific known errors for NextAuth to handle and potentially display to user\n          if (\n            [\n              \"No user found with this email.\",\n              \"Invalid password.\",\n              \"User account is not properly configured for password login.\",\n              \"Please enter both email and password.\",\n            ].includes(error.message) || error.message.startsWith(\"Database connection failed:\") || error.message.startsWith(\"Server configuration error:\")\n          ) {\n            throw error;\n          }\n          // For other unexpected errors, throw a generic message\n          throw new Error(\"Authentication failed due to an unexpected server issue. Please try again.\");\n        }\n      },\n    }),\n  ],\n\n  // === Session Configuration ===\n  session: {\n    strategy: \"jwt\", // Use JWT tokens instead of DB sessions\n  },\n\n  // === Callback Functions ===\n  callbacks: {\n    // Modify JWT on login or session update\n    async jwt({ token, user, trigger, session: newSessionData }) { // Renamed `session` to `newSessionData` to avoid conflict\n      try {\n        // On initial sign in, the `user` object from `authorize` is available\n        if (user) {\n          console.log(\"[JWT Callback] Initial user object from authorize:\", user);\n          token.id = user.id;\n          token.name = user.name;\n          token.email = user.email;\n          token.picture = user.image; // `user.image` from authorize maps to `token.picture`\n          token.role = user.role;\n        }\n\n        // Handle session updates (e.g., user updates profile)\n        if (trigger === \"update\" && newSessionData?.user) {\n          console.log(\"[JWT Callback] Updating token from session update data:\", newSessionData.user);\n          token.name = newSessionData.user.name;\n          token.email = newSessionData.user.email;\n          token.picture = newSessionData.user.image;\n          token.role = newSessionData.user.role;\n        }\n        console.log(\"[JWT Callback] Token before returning:\", token);\n        return token;\n      } catch (error: any) {\n        console.error(\"[JWT Callback] Error in JWT callback:\", error.message, error.stack);\n        // Return existing token or throw to signify critical failure.\n        // Returning existing token might lead to inconsistent state if update failed.\n        // For now, returning token to prevent complete session breakage if possible.\n        return token;\n      }\n    },\n\n    // Attach token data to session for use on client side\n    async session({ session, token }) {\n      try {\n        console.log(\"[Session Callback] Token received:\", token);\n        if (token) {\n          // Ensure session.user exists and is structured according to `next-auth.d.ts`\n          session.user = {\n            id: token.id as string,\n            name: token.name,\n            email: token.email,\n            image: token.picture, // Map token.picture (from JWT) to session.user.image\n            role: token.role as string | undefined,\n          };\n        }\n        console.log(\"[Session Callback] Session user before returning:\", session.user);\n        return session;\n      } catch (error: any) {\n        console.error(\"[Session Callback] Error in session callback:\", error.message, error.stack);\n        // Return existing session to prevent complete breakage if possible.\n        return session;\n      }\n    },\n  },\n\n  // === Custom Auth Pages ===\n  pages: {\n    signIn: \"/login\",\n    error: \"/login\", // Errors will append ?error= to the URL\n  },\n\n  // === Secret for signing JWT ===\n  secret: process.env.NEXTAUTH_SECRET\n};\n\n// Export for Next.js API routes\nconst handler = NextAuth(authOptions);\nexport { handler as GET, handler as POST };\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 417, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/models/Booking.ts"],"sourcesContent":["\nimport mongoose, { Schema, Document } from 'mongoose';\nimport type { Booking as BookingType, PaymentStatus, BookingStatus } from '@/lib/types';\n\nexport interface BookingDocument extends Omit<BookingType, 'id' | 'createdAt' | 'listingId' | 'guestId'>, Document {\n  listingId: mongoose.Types.ObjectId;\n  guestId: mongoose.Types.ObjectId;\n}\n\nconst bookingSchema = new Schema<BookingDocument>(\n  {\n    listingId: {\n      type: Schema.Types.ObjectId,\n      ref: 'Property',\n      required: true,\n    },\n    guestId: {\n      type: Schema.Types.ObjectId,\n      ref: 'User',\n      required: true,\n    },\n    startDate: {\n      type: Date,\n      required: true,\n    },\n    endDate: {\n      type: Date,\n      required: true,\n    },\n    totalPrice: {\n      type: Number,\n      required: true,\n      min: 0,\n    },\n    paymentStatus: {\n      type: String,\n      enum: ['pending', 'paid', 'failed', 'refunded'] as PaymentStatus[],\n      required: true,\n      default: 'pending',\n    },\n    bookingStatus: {\n      type: String,\n      enum: [\n        'pending_confirmation', \n        'pending_payment',\n        'confirmed_by_host', \n        'rejected_by_host', \n        'cancelled_by_guest',\n        'cancelled_by_admin', // Added new status\n        'completed',\n        'no_show'\n      ] as BookingStatus[],\n      required: true,\n      default: 'pending_confirmation', \n    },\n  },\n  { timestamps: true }\n);\n\nbookingSchema.index({ listingId: 1, startDate: 1, endDate: 1 });\nbookingSchema.index({ guestId: 1 });\n\nexport default mongoose.models.Booking || mongoose.model<BookingDocument>(\"Booking\", bookingSchema);\n"],"names":[],"mappings":";;;AACA;;AAQA,MAAM,gBAAgB,IAAI,yGAAA,CAAA,SAAM,CAC9B;IACE,WAAW;QACT,MAAM,yGAAA,CAAA,SAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,KAAK;QACL,UAAU;IACZ;IACA,SAAS;QACP,MAAM,yGAAA,CAAA,SAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,KAAK;QACL,UAAU;IACZ;IACA,WAAW;QACT,MAAM;QACN,UAAU;IACZ;IACA,SAAS;QACP,MAAM;QACN,UAAU;IACZ;IACA,YAAY;QACV,MAAM;QACN,UAAU;QACV,KAAK;IACP;IACA,eAAe;QACb,MAAM;QACN,MAAM;YAAC;YAAW;YAAQ;YAAU;SAAW;QAC/C,UAAU;QACV,SAAS;IACX;IACA,eAAe;QACb,MAAM;QACN,MAAM;YACJ;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;QACD,UAAU;QACV,SAAS;IACX;AACF,GACA;IAAE,YAAY;AAAK;AAGrB,cAAc,KAAK,CAAC;IAAE,WAAW;IAAG,WAAW;IAAG,SAAS;AAAE;AAC7D,cAAc,KAAK,CAAC;IAAE,SAAS;AAAE;uCAElB,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,OAAO,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAkB,WAAW","debugId":null}},
    {"offset": {"line": 490, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/models/BookedDateRange.ts"],"sourcesContent":["\nimport mongoose, { Schema, Document } from 'mongoose';\nimport type { BookingStatus } from '@/lib/types';\n\n// Interface for the Mongoose Document\nexport interface BookedDateRangeDocument extends Document {\n  _id: mongoose.Types.ObjectId;\n  propertyId: mongoose.Types.ObjectId;\n  bookingId: mongoose.Types.ObjectId;\n  startDate: Date;\n  endDate: Date;\n  status: BookingStatus;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nconst bookedDateRangeSchema = new Schema<BookedDateRangeDocument>(\n  {\n    propertyId: {\n      type: Schema.Types.ObjectId,\n      ref: 'Property',\n      required: true,\n      index: true,\n    },\n    bookingId: {\n      type: Schema.Types.ObjectId,\n      ref: 'Booking',\n      required: true,\n      unique: true, \n      index: true,\n    },\n    startDate: {\n      type: Date,\n      required: true,\n    },\n    endDate: {\n      type: Date,\n      required: true,\n    },\n    status: {\n      type: String,\n      enum: [\n        'pending_confirmation',\n        'pending_payment',\n        'confirmed_by_host',\n        'rejected_by_host',\n        'cancelled_by_guest',\n        'cancelled_by_admin', // Added new status\n        'completed',\n        'no_show',\n      ] as BookingStatus[],\n      required: true,\n      index: true,\n    },\n  },\n  { timestamps: true }\n);\n\n// Compound index to quickly find overlapping ranges for a property\nbookedDateRangeSchema.index({ propertyId: 1, startDate: 1, endDate: 1 });\nbookedDateRangeSchema.index({ propertyId: 1, status: 1 });\n\n\nexport default mongoose.models.BookedDateRange || mongoose.model<BookedDateRangeDocument>(\"BookedDateRange\", bookedDateRangeSchema);\n"],"names":[],"mappings":";;;AACA;;AAeA,MAAM,wBAAwB,IAAI,yGAAA,CAAA,SAAM,CACtC;IACE,YAAY;QACV,MAAM,yGAAA,CAAA,SAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,KAAK;QACL,UAAU;QACV,OAAO;IACT;IACA,WAAW;QACT,MAAM,yGAAA,CAAA,SAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,KAAK;QACL,UAAU;QACV,QAAQ;QACR,OAAO;IACT;IACA,WAAW;QACT,MAAM;QACN,UAAU;IACZ;IACA,SAAS;QACP,MAAM;QACN,UAAU;IACZ;IACA,QAAQ;QACN,MAAM;QACN,MAAM;YACJ;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;QACD,UAAU;QACV,OAAO;IACT;AACF,GACA;IAAE,YAAY;AAAK;AAGrB,mEAAmE;AACnE,sBAAsB,KAAK,CAAC;IAAE,YAAY;IAAG,WAAW;IAAG,SAAS;AAAE;AACtE,sBAAsB,KAAK,CAAC;IAAE,YAAY;IAAG,QAAQ;AAAE;uCAGxC,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,eAAe,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAA0B,mBAAmB","debugId":null}},
    {"offset": {"line": 552, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/api/bookings/%5BbookingId%5D/route.ts"],"sourcesContent":["\n'use server';\n\nimport { NextResponse, type NextRequest } from 'next/server';\nimport { getServerSession } from 'next-auth/next';\nimport mongoose from 'mongoose';\nimport { authOptions } from '@/app/api/auth/[...nextauth]/route';\nimport connectDB from '@/utils/db';\nimport Booking, { type BookingDocument } from '@/models/Booking';\nimport Property from '@/models/Property'; \nimport BookedDateRangeModel from '@/models/BookedDateRange';\nimport type { BookingStatus, PaymentStatus } from '@/lib/types';\n\nexport async function DELETE(\n  request: NextRequest,\n  { params }: { params: { bookingId: string } }\n) {\n  try {\n    const session = await getServerSession(authOptions);\n    if (!session || !session.user || !session.user.id) {\n      return NextResponse.json({ message: 'Unauthorized: You must be logged in.' }, { status: 401 });\n    }\n\n    const { bookingId } = params;\n    if (!mongoose.Types.ObjectId.isValid(bookingId)) {\n      return NextResponse.json({ message: 'Invalid booking ID format.' }, { status: 400 });\n    }\n\n    await connectDB();\n\n    // Fetch booking and populate listingId to get hostId\n    // Instead of lean, we will operate on the Mongoose document to use instance methods if needed,\n    // but for simple field access and deletion, lean is fine. Let's keep it simple.\n    const booking = await Booking.findById(bookingId)\n        .populate<{ listingId: { _id: mongoose.Types.ObjectId, hostId: mongoose.Types.ObjectId } }>({\n            path: 'listingId',\n            select: 'hostId _id' // Only select hostId and _id from property\n        }).lean() as (BookingDocument & { listingId: { _id: mongoose.Types.ObjectId, hostId: mongoose.Types.ObjectId } | null }) | null;\n\n\n    if (!booking) {\n      return NextResponse.json({ message: 'Booking not found.' }, { status: 404 });\n    }\n    if (!booking.listingId || !booking.listingId.hostId) { // Check if listingId and hostId are populated\n        console.error(`[API /bookings/${bookingId} DELETE] Booking ${booking._id} has no valid associated property or hostId.`);\n        return NextResponse.json({ message: 'Booking is not associated with a valid property or host.' }, { status: 500 });\n    }\n\n    const isGuest = booking.guestId.toString() === session.user.id;\n    const isHost = booking.listingId.hostId.toString() === session.user.id;\n    const isAdmin = session.user.role === 'admin';\n\n    let actionTakenMessage: string;\n\n    if (isAdmin || isHost) {\n      // Admin or Host can delete the booking and its associated date range\n      await Booking.findByIdAndDelete(booking._id);\n      const deletedRange = await BookedDateRangeModel.findOneAndDelete({ bookingId: booking._id });\n      \n      actionTakenMessage = `Booking ${booking._id} and associated date range (if any) deleted by ${isAdmin ? 'admin' : 'host'}.`;\n      console.log(`[API /bookings/${bookingId} DELETE] ${actionTakenMessage}`);\n      return NextResponse.json({ message: 'Booking successfully deleted.' }, { status: 200 });\n\n    } else if (isGuest) {\n      // Guest can cancel their booking\n      if (booking.bookingStatus === 'pending_payment' || booking.bookingStatus === 'pending_confirmation') {\n        // For pending bookings, delete them entirely\n        await Booking.findByIdAndDelete(booking._id);\n        await BookedDateRangeModel.findOneAndDelete({ bookingId: booking._id });\n        actionTakenMessage = `Pending booking ${booking._id} cancelled and removed by guest.`;\n        console.log(`[API /bookings/${bookingId} DELETE] ${actionTakenMessage}`);\n        return NextResponse.json({ message: 'Booking successfully cancelled and removed.' }, { status: 200 });\n\n      } else if (booking.bookingStatus === 'confirmed_by_host') {\n        // For confirmed bookings, mark as 'cancelled_by_guest'\n        // Conceptual refund status; actual Stripe refund is not implemented here.\n        const updatedBooking = await Booking.findByIdAndUpdate(\n          booking._id,\n          { \n            $set: { \n              bookingStatus: 'cancelled_by_guest' as BookingStatus, \n              paymentStatus: 'refunded' as PaymentStatus // Conceptual refund\n            } \n          },\n          { new: true }\n        );\n        // Delete the BookedDateRange to free up dates\n        await BookedDateRangeModel.findOneAndDelete({ bookingId: booking._id });\n        actionTakenMessage = `Booking ${booking._id} status updated to 'cancelled_by_guest' by guest. Associated date range removed.`;\n        console.log(`[API /bookings/${bookingId} DELETE] ${actionTakenMessage}`);\n        return NextResponse.json({ message: 'Booking successfully cancelled.', booking: updatedBooking?.toObject() }, { status: 200 });\n      \n      } else {\n        // If booking is already cancelled, rejected, completed, etc.\n        return NextResponse.json({ message: `Cannot cancel booking. Current status: '${booking.bookingStatus}'.` }, { status: 409 });\n      }\n    } else {\n      // User is not guest, host, or admin\n      return NextResponse.json({ message: 'Forbidden: You are not authorized to perform this action on this booking.' }, { status: 403 });\n    }\n\n  } catch (error: any) {\n    console.error(`[API /bookings/${params.bookingId} DELETE] Error:`, error);\n    let errorMessage = 'An unexpected error occurred while managing the booking.';\n    if (error.name === 'MongoNetworkError') {\n      errorMessage = 'Database connection error.';\n    } else if (error.message) {\n      errorMessage = error.message;\n    }\n    return NextResponse.json({ message: errorMessage, errorDetails: error.toString() }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}